package com.redhat.ecosystemappeng.serialization;

import java.io.IOException;
import java.util.Date;

import org.bson.Document;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.redhat.ecosystemappeng.model.Vulnerability;

import jakarta.enterprise.context.ApplicationScoped;
import jakarta.inject.Inject;

@ApplicationScoped
public class VulnerabilityDeserializer {

    @Inject
    ObjectMapper mapper;

    public Vulnerability parse(byte[] content) throws IOException {
        var dateReader = mapper.readerFor(Date.class);
        var node = mapper.readTree(content);
        var v = new Vulnerability.Builder();
        v.vulnId(node.get("id").asText())
                .modified(dateReader.readValue(node.get("modified")))
                .published(dateReader.readValue(node.get("published")))
                .osvRaw(Document.parse(node.toPrettyString()));
        node.withArray("aliases").forEach(aliasNode -> {
            var alias = aliasNode.asText();
            if (alias.startsWith("CVE-")) {
                v.cve(alias);
            }
        });
        
        return v.build();
    }

}
